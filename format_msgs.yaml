Version:
  variable:
    version: int
  info:
    file: com_type
    object:
      - version
  
Position:
  struct:
    x: float  # unit in meter
    y: float  # unit in meter
    t: float  # unit in rad
  info:
    file: Asserv_type
    object: 
      - position_robot
      - Wanted_Pos

Speed:
  struct:
    vx: float # unit in m/s
    vy: float # unit in m/s
    vt: float # unit in rad/s
  info:
    file: Asserv_type
    object: 
      - speed_robot
      - Wanted_Speed
      - Max_Speed

Acceleration:
  struct:
    ax: float # unit in m/s^2
    ay: float # unit in m/s^2
    at: float # unit in rad/s^2
  info:
    file: Asserv_type
    object: 
      - acceleration_robot

PID_coef:
  struct:
    kp: float
    ki: float
    kd: float
  info:
    file: Asserv_type
    
PID_err:
  struct:
    err: float
    err_int: float
    err_der: float
  info:
    file: Asserv_type

PID_pos:
  struct:
    coef: PID_coef
    err: PID_err
  info:
    file: Asserv_type

PID_speed:
  struct:
    coef: PID_coef
    err1: PID_err
    err2: PID_err
    err3: PID_err
  info:
    file: Asserv_type

ESC_Command:
  struct:
    command1: float
    command2: float
    command3: float
  info:
    file: Asserv_type
    object:
      - Consigne
      - Wanted_Forced_Consigne
      - old_consigne

LED_STRUCT:
  struct:
    red: int
    green: int
    blue: int
  info:
    file: IHM_type
    object:
      - led

LED_ARRAY:
  array:
    size: 44
    type: LED_STRUCT
  info:
    file: IHM_type
    object:
      - led_array

PUMP_STRUCT:
  struct:
    id: int
    enable: int # 1 activate, 0 stop
  info:
    file: ACTIONNEUR_type
    object:
      - pump

PUMP_ARRAY:
  array:
    size: 6
    type: PUMP_STRUCT
  info:
    file: ACTIONNEUR_type
    object:
      - pump_array

SERVO:
  struct:
    id: int
    angle: int
  info:
    file: ACTIONNEUR_type
    object:
      - servo

SERVO_ARRAY:
  array:
    size: 2
    type: SERVO
  info:
    file: ACTIONNEUR_type
    object:
      - servo_array

ODOM_STRUCT:
  struct:
    enable: int # 1 activate, 0 stop publishing
    freq: float # if 0, send only once else send freq
  info:
    file: ASSERV_cmd
    object: 
      - odom_status
    
servo_cmd:
  id: int
  angle: int  

action_done:
  action_done: bool

cmd_done:
  cmd_done: bool

servo_cancel:
  id: int

